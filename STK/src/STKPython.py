# -*- coding: utf-8 -*-
"""
Created on Thu Aug 31 10:40:17 2023

@author: DECLINE
"""

import numpy as np
import matplotlib.pyplot as plt
import os
import win32com.client
import pandas as pd

plt.close("all")

uiApplication = win32com.client.Dispatch('STK11.Application')
uiApplication.Visible = True

# Get our IAgStkObjectRoot interface
root = uiApplication.Personality2

#Creating the Scenario
num_days=7; # <28 j
#scenario = root.CurrentScenario
scenario = root.Children.New('eScenario','scenario1'); #('eScenario', 'Decline')
scenario.SetTimePeriod('1 Nov 2023 10:30:00.000',str(num_days+1)+' Nov 2023 10:30:00.000');
scenario.StartTime = '1 Nov 2023 10:30:00.000';
scenario.StopTime = str(num_days+1)+' Nov 2023 10:30:00.000';
root.ExecuteCommand('Animate * Reset');

#Adding the Ground Stations


#Toulouse
 
facility_tou = root.CurrentScenario.Children.New('eFacility', 'Toulouse'); #('eFacility', 'typeyourname')
facility_tou.Position.AssignGeodetic(43.428889,1.497778,0);  #absign LAT and LON
sensor = facility_tou.Children.New('eSensor', 'ToulouseGS'); #adding a sensor ('eSensor', 'typeyourname') and attaching it to the facility
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293); #sensor proprieties (FOV, angular resolution)
 
#Papeete
 
facility_pap = root.CurrentScenario.Children.New('eFacility', 'Papeete');
facility_pap.Position.AssignGeodetic(-17.511,-149.435,0);
sensor = facility_pap.Children.New('eSensor', 'PapeeteGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Ile Amsterdam
 
facility_ile = root.CurrentScenario.Children.New('eFacility', 'IleAmsterdam');
facility_ile.Position.AssignGeodetic(-37.493,77.337,0);
sensor = facility_ile.Children.New('eSensor', 'IleAmsterdamGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Noumea
 
facility_nou = root.CurrentScenario.Children.New('eFacility', 'Noumea');
facility_nou.Position.AssignGeodetic(-22.2758,166.458,0);
sensor = facility_nou.Children.New('eSensor', 'NoumeaGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Kiev
 
facility_kie = root.CurrentScenario.Children.New('eFacility', 'Kiev');
facility_kie.Position.AssignGeodetic(50.45, 30.523611,0);
sensor = facility_kie.Children.New('eSensor', 'KievGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Kourou
 
facility_kou = root.CurrentScenario.Children.New('eFacility', 'Kourou');
facility_kou.Position.AssignGeodetic(5.25144, -52.8047,0);
sensor = facility_kou.Children.New('eSensor', 'KourouGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Redu
 
facility_red = root.CurrentScenario.Children.New('eFacility', 'Redu');
facility_red.Position.AssignGeodetic(50.001889, 5.146656,0);
sensor = facility_red.Children.New('eSensor', 'ReduGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Santa Maria
 
facility_sm = root.CurrentScenario.Children.New('eFacility', 'SantaMaria');
facility_sm.Position.AssignGeodetic(36.99725, -25.135722,0);
sensor = facility_sm.Children.New('eSensor', 'SantaMariaGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Kiruna
 
facility_kir = root.CurrentScenario.Children.New('eFacility', 'Kiruna');
facility_kir.Position.AssignGeodetic(67.857128, 20.964325,0);
sensor = facility_kir.Children.New('eSensor', 'KirunaGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#Rapa
 
facility_rap = root.CurrentScenario.Children.New('eFacility', 'Rapa');
facility_rap.Position.AssignGeodetic(-27.583333, -144.333333,0);
sensor = facility_rap.Children.New('eSensor', 'RapaGS');
sensor.CommonTasks.SetPatternSimpleConic(30,0.17453293);
 
#%%
#Adding the Area Target
#
location = root.CurrentScenario.Children.New('eAreaTarget', 'Ukraine'); #standart input to create a location of interest
location.AreaTypeData.RemoveAll;
boundary_S11=pd.read_csv(r"C:\Users\DECLINE\Desktop\logiciels\python\stk\shapes\S11.txt")
boundary_Ukraine = [47.991746,22.851563
,48.114737,23.170166
,47.967839,23.466797
,48.004580,23.510742
,47.931071,23.895264
,47.945782,23.983154
,47.894278,24.213867
,47.953135,24.389648
,47.967839,24.576416
,47.894278,24.675293
,47.820611,24.719238
,47.791116,24.818115
,47.702528,24.906006
,47.754222,25.114746
,47.879553,25.213623
,47.916357,25.323486
,47.923715,25.576172
,47.953135,25.631104
,47.938427,25.784912
,47.975189,25.828857
,47.960488,25.872803
,47.975189,25.916748
,47.967839,25.949707
,47.982539,26.059570
,47.982539,26.169434
,48.048636,26.202393
,48.077985,26.268311
,48.136633,26.312256
,48.202533,26.378174
,48.202533,26.455078
,48.217343,26.564941
,48.261216,26.608887
,48.356146,26.674805
,48.283139,26.806641
,48.305052,26.817627
,48.334255,26.828613
,48.334255,26.762695
,48.399900,26.707764
,48.407188,26.773682
,48.414476,26.872559
,48.370735,26.905518
,48.363441,26.993408
,48.385319,27.048340
,48.407188,27.015381
,48.429048,27.081299
,48.363441,27.147217
,48.378027,27.191162
,48.370735,27.290039
,48.436333,27.322998
,48.407188,27.388916
,48.414476,27.432861
,48.443616,27.476807
,48.480018,27.586670
,48.450899,27.586670
,48.429048,27.652588
,48.443616,27.740479
,48.407188,27.817383
,48.385319,27.894287
,48.356146,27.883301
,48.319655,27.938232
,48.312354,28.048096
,48.283139,28.081055
,48.246596,28.070068
,48.217343,28.114014
,48.253907,28.135986
,48.269575,28.179932
,48.195175,28.201904
,48.239067,28.300781
,48.231754,28.344727
,48.217126,28.355713
,48.187856,28.355713
,48.158570,28.278809
,48.136594,28.322754
,48.158570,28.377686
,48.165893,28.421631
,48.121938,28.432617
,48.063273,28.454590
,48.055935,28.498535
,48.129266,28.509521
,48.173215,28.575439
,48.143920,28.663330
,48.121938,28.707275
,48.121938,28.839111
,48.092614,28.861084
,48.048596,28.861084
,47.982499,28.894043
,47.916317,28.992920
,47.975150,29.113770
,47.931032,29.201660
,47.872149,29.212646
,47.879513,29.300537
,47.820572,29.245605
,47.791076,29.278564
,47.717263,29.190674
,47.665532,29.234619
,47.613750,29.212646
,47.524860,29.135742
,47.502614,29.135742
,47.502614,29.179688
,47.472938,29.179688
,47.443246,29.190674
,47.413536,29.234619
,47.398675,29.256592
,47.443246,29.322510
,47.398675,29.322510
,47.385049,29.377441
,47.353731,29.388428
,47.301640,29.399414
,47.301640,29.454346
,47.346292,29.487305
,47.361168,29.575195
,47.256849,29.586182
,47.234490,29.531250
,47.122551,29.575195
,47.122551,29.487305
,47.085186,29.509277
,47.092661,29.586182
,47.032831,29.619141
,46.965441,29.597168
,46.950454,29.553223
,46.920468,29.608154
,46.905468,29.674072
,46.837918,29.750977
,46.882961,29.871826
,46.822895,29.893799
,46.837918,29.948730
,46.815383,29.970703
,46.800354,29.926758
,46.725146,29.981689
,46.679971,29.981689
,46.627218,29.959717
,46.581478,29.959717
,46.521076,29.882813
,46.498408,29.970703
,46.453043,30.003662
,46.437913,30.080566
,46.422779,30.157471
,46.369776,30.091553
,46.384925,30.058594
,46.384925,29.915771
,46.347045,29.882813
,46.377351,29.805908
,46.445479,29.739990
,46.415210,29.685059
,46.415210,29.652100
,46.362200,29.652100
,46.354623,29.575195
,46.407641,29.564209
,46.407641,29.476318
,46.468169,29.476318
,46.490849,29.432373
,46.430347,29.388428
,46.483290,29.344482
,46.422779,29.311523
,46.392498,29.289551
,46.392498,29.256592
,46.369776,29.256592
,46.392498,29.201660
,46.415210,29.223633
,46.437913,29.223633
,46.475730,29.234619
,46.551285,29.234619
,46.536182,29.157715
,46.513521,29.168701
,46.513521,29.058838
,46.490849,28.970947
,46.445479,28.970947
,46.445479,28.927002
,46.309139,28.992920
,46.248434,28.948975
,46.195263,29.069824
,46.081150,28.937988
,46.027816,29.003906
,45.959169,28.762207
,45.821618,28.773193
,45.821618,28.696289
,45.768035,28.696289
,45.768035,28.597412
,45.722065,28.597412
,45.729729,28.509521
,45.668385,28.476563
,45.645364,28.498535
,45.583927,28.531494
,45.553184,28.476563
,45.499343,28.520508
,45.468553,28.432617
,45.514731,28.410645
,45.537806,28.311768
,45.414631,28.289795
,45.322072,28.333740
,45.221630,28.773193
,45.260282,28.751221
,45.291186,28.795166
,45.337509,28.784180
,45.291186,28.850098
,45.275736,28.948975
,45.314352,28.948975
,45.406923,29.179688
,45.414631,29.300537
,45.437746,29.421387
,45.368370,29.597168
,45.322072,29.641113
,45.275736,29.696045
,45.244825,29.630127
,45.190689,29.674072
,45.151988,29.937744
,45.059001,30.036621
,45.051245,30.278320
,45.175212,30.454102
,45.368370,30.421143
,45.460853,30.201416
,45.422337,30.069580
,45.499343,30.047607
,46.362200,31.025391
,46.384925,31.234131
,46.157251,31.322021
,46.035438,31.629639
,45.821618,32.761230
,45.821618,32.211914
,45.282737,32.211914
,45.128029,32.431641
,45.112535,32.640381
,45.128029,32.805176
,44.926280,33.288574
,44.762810,33.244629
,44.544128,33.101807
,44.253891,33.453369
,44.167327,33.859863
,44.214559,34.112549
,44.308911,34.376221
,44.606693,34.771729
,44.575419,35.046387
,44.723820,35.397949
,44.840711,35.628662
,44.926280,36.584473
,45.174486,36.518555
,45.421614,36.672363
,45.621613,36.661377
,45.606254,36.013184
,45.490925,35.573730
,45.790287,35.244141
,45.912640,35.167236
,46.414500,35.837402
,46.300843,36.166992
,46.527921,36.540527
,46.452334,36.848145
,46.701374,37.155762
,46.693844,37.408447
,46.821709,37.628174
,46.866766,38.155518
,46.979241,38.331299
,47.218401,38.221436
,47.292918,38.331299
,47.292918,38.199463
,47.411927,38.298340
,47.545491,38.298340
,47.649140,38.452148
,47.641744,38.594971
,47.686108,38.649902
,47.678716,38.759766
,47.796854,38.781738
,47.863188,38.869629
,47.863188,39.067383
,47.818975,39.122314
,47.855822,39.385986
,47.811602,39.737549
,47.958855,39.803467
,48.017639,39.781494
,48.039666,39.869385
,48.069020,39.847412
,48.186271,39.913330
,48.215541,40.012207
,48.310556,39.968262
,48.266725,39.924316
,48.317857,39.836426
,48.347053,39.935303
,48.463667,39.847412
,48.565486,39.858398
,48.580015,39.660645
,48.652596,39.704590
,48.761273,39.737549
,48.826366,39.770508
,48.797446,39.957275
,48.869715,40.078125
,48.913026,40.045166
,48.862492,39.990234
,48.869715,39.825439
,48.977922,39.704590
,49.028338,39.660645
,49.028338,39.748535
,49.042734,39.924316
,49.172105,40.034180
,49.229495,40.111084
,49.243832,40.198975
,49.329767,40.177002
,49.436975,40.034180
,49.508317,40.023193
,49.565316,40.177002
,49.608022,40.122070
,49.586673,39.946289
,49.543949,39.869385
,49.615136,39.616699
,49.714622,39.594727
,49.743009,39.385986
,49.757197,39.243164
,49.877623,39.177246
,49.813905,39.001465
,49.792647,38.924561
,49.849314,38.924561
,49.877623,38.748779
,49.920054,38.693848
,49.997749,38.693848
,49.955386,38.660889
,49.955386,38.496094
,50.004806,38.430176
,49.983632,38.408203
,49.997749,38.342285
,50.068272,38.320313
,50.061224,38.177490
,49.976572,38.199463
,49.934190,38.111572
,49.898843,38.023682
,49.948322,38.023682
,50.042968,37.891846
,50.064116,37.792969
,50.176746,37.639160
,50.310151,37.628174
,50.303139,37.573242
,50.366210,37.463379
,50.436190,37.485352
,50.429197,37.408447
,50.429197,37.331543
,50.352201,37.122803
,50.345196,36.892090
,50.261045,36.694336
,50.204863,36.661377
,50.225939,36.562500
,50.268064,36.584473
,50.324172,36.419678
,50.282097,36.342773
,50.282097,36.265869
,50.331181,36.287842
,50.422203,36.156006
,50.422203,35.826416
,50.352201,35.738525
,50.352201,35.606689
,50.450174,35.573730
,50.520031,35.419922
,50.575842,35.408936
,50.624622,35.386963
,50.673352,35.496826
,50.770660,35.496826
,50.812301,35.397949
,50.902397,35.386963
,50.937003,35.343018
,50.985409,35.321045
,51.040667,35.386963
,51.082068,35.310059
,51.040667,35.200195
,51.061372,35.145264
,51.123432,35.156250
,51.206048,35.134277
,51.206048,35.046387
,51.219803,34.969482
,51.171642,34.837646
,51.178526,34.683838
,51.233554,34.661865
,51.254172,34.387207
,51.233554,34.310303
,51.267913,34.222412
,51.336555,34.332275
,51.384543,34.233398
,51.514542,34.288330
,51.664606,34.079590
,51.732654,34.442139
,51.820962,34.431152
,51.868441,34.277344
,52.003819,34.079590
,52.132051,34.112549
,52.246473,33.936768
,52.280070,33.936768
,52.300216,33.870850
,52.353895,33.837891
,52.306929,33.508301
,52.333773,33.508301
,52.353895,33.442383
,52.367304,33.376465
,52.340481,33.299561
,52.360600,33.189697
,52.239750,32.882080
,52.266634,32.860107
,52.239750,32.706299
,52.320353,32.519531
,52.320353,32.354736
,52.253194,32.409668
,52.233026,32.321777
,52.145528,32.354736
,52.044353,32.091064
,52.044353,31.926270
,52.071356,31.948242
,52.098342,31.849365
,52.091597,31.739502
,52.118570,31.497803
,52.138790,31.409912
,52.091597,31.333008
,52.037600,31.300049
,52.024091,31.245117
,52.091597,31.135254
,52.091597,30.937500
,51.997060,30.915527
,51.949717,30.794678
,51.918882,30.824890
,51.896850,30.805664
,51.900237,30.750732
,51.859573,30.706787
,51.818871,30.684814
,51.818871,30.651855
,51.788321,30.662842
,51.761148,30.607910
,51.754352,30.640869
,51.730559,30.624390
,51.710155,30.618896
,51.710155,30.563965
,51.669318,30.580444
,51.638667,30.580444
,51.633366,30.544739
,51.619735,30.561218
,51.618030,30.536499
,51.600985,30.536499
,51.536499,30.500793
,51.575405,30.555725
,51.570287,30.525513
,51.537862,30.541992
,51.549811,30.572205
,51.539569,30.583191
,51.512247,30.566711
,51.471232,30.591431
,51.471232,30.616150
,51.459262,30.616150
,51.445579,30.572205
,51.423335,30.588684
,51.428469,30.621643
,51.370247,30.654602
,51.366820,30.632629
,51.341109,30.654602
,51.329105,30.651855
,51.329105,30.621643
,51.310236,30.594177
,51.293075,30.616150
,51.279342,30.613403
,51.260452,30.533752
,51.277625,30.500793
,51.274191,30.454102
,51.284492,30.462341
,51.293075,30.462341
,51.303372,30.462341
,51.303372,30.437622
,51.303372,30.415649
,51.311730,30.396423
,51.356316,30.319519
,51.378593,30.357971
,51.419691,30.344238
,51.482978,30.245361
,51.486396,30.217896
,51.513735,30.176697
,51.491524,30.168457
,51.503485,30.127258
,51.489815,30.121765
,51.500192,30.009155
,51.483103,29.992676
,51.483103,29.970703
,51.471136,29.970703
,51.467717,29.945984
,51.483103,29.945984
,51.489939,29.929504
,51.474555,29.888306
,51.450615,29.882813
,51.450615,29.855347
,51.454036,29.844360
,51.442062,29.819641
,51.459167,29.811401
,51.454036,29.789429
,51.440351,29.789429
,51.452325,29.745483
,51.484812,29.729004
,51.496775,29.742737
,51.508734,29.737244
,51.527522,29.737244
,51.527522,29.712524
,51.496775,29.671326
,51.505318,29.652100
,51.496775,29.646606
,51.503609,29.635620
,51.496775,29.621887
,51.489939,29.608154
,51.472846,29.608154
,51.457456,29.577942
,51.481393,29.539490
,51.457456,29.533997
,51.443772,29.520264
,51.423239,29.520264
,51.397559,29.498291
,51.411257,29.410400
,51.383799,29.352722
,51.387225,29.341736
,51.376947,29.330750
,51.447136,29.308777
,51.453978,29.281311
,51.472788,29.275818
,51.484754,29.251099
,51.522341,29.262085
,51.565016,29.251099
,51.559897,29.215393
,51.600832,29.201660
,51.605946,29.168701
,51.622990,29.190674
,51.621286,29.160461
,51.645137,29.174194
,51.651949,29.122009
,51.658760,29.119263
,51.636620,29.094543
,51.624694,29.089050
,51.624694,29.069824
,51.587191,29.025879
,51.571840,29.006653
,51.570134,28.970947
,51.587191,28.970947
,51.587191,28.918762
,51.590602,28.913269
,51.582075,28.880310
,51.561604,28.836365
,51.561604,28.819885
,51.483045,28.759460
,51.455688,28.786926
,51.414623,28.751221
,51.424893,28.731995
,51.462529,28.737488
,51.447136,28.712769
,51.438582,28.688049
,51.510385,28.652344
,51.547951,28.646851
,51.558191,28.663330
,51.571840,28.652344
,51.566722,28.558960
,51.578664,28.547974
,51.578664,28.526001
,51.587191,28.517761
,51.594012,28.462830
,51.537709,28.355713
,51.551364,28.355713
,51.573546,28.344727
,51.617877,28.276062
,51.617877,28.251343
,51.670677,28.270569
,51.682591,28.254089
,51.643433,28.166199
,51.622990,28.166199
,51.600832,28.146973
,51.604242,28.122253
,51.583780,28.119507
,51.575252,28.083801
,51.578664,28.064575
,51.566722,28.061829
,51.558191,27.940979
,51.590602,27.973938
,51.577079,27.938232
,51.597543,27.916260
,51.624814,27.850342
,51.621406,27.817383
,51.539537,27.839355
,51.532708,27.806396
,51.460940,27.762451
,51.508798,27.685547
,51.560018,27.713013
,51.594133,27.723999
,51.607772,27.636108
,51.635037,27.559204
,51.621406,27.553711
,51.641851,27.509766
,51.600953,27.515259
,51.580490,27.509766
,51.597543,27.482300
,51.607772,27.482300
,51.607772,27.438354
,51.604362,27.257080
,51.641851,27.273560
,51.655475,27.240601
,51.655475,27.207642
,51.757528,27.202148
,51.767721,27.004395
,51.737136,26.954956
,51.764323,26.834106
,51.747333,26.801147
,51.757528,26.746216
,51.805074,26.746216
,51.805074,26.696777
,51.825435,26.581421
,51.798285,26.548462
,51.798285,26.477051
,51.825435,26.400146
,51.862741,26.394653
,51.849179,26.312256
,51.855960,26.169434
,51.927105,25.982666
,51.906789,25.922241
,51.916948,25.823364
,51.937259,25.817871
,51.954178,25.762939
,51.927105,25.762939
,51.913562,25.702515
,51.933875,25.526733
,51.923720,25.477295
,51.930490,25.339966
,51.964326,25.246582
,51.954178,25.224609
,51.967708,25.186157
,51.954431,25.131226
,51.954431,25.092773
,51.913816,25.013123
,51.913816,24.991150
,51.893494,24.938965
,51.913816,24.908752
,51.895188,24.840088
,51.912123,24.829102
,51.912123,24.804382
,51.893494,24.776917
,51.879942,24.746704
,51.891800,24.716492
,51.886718,24.672546
,51.882546,24.661560
,51.898576,24.609375
,51.891800,24.570923
,51.885024,24.543457
,51.885024,24.505005
,51.881636,24.381409
,51.862995,24.348450
,51.864690,24.334717
,51.844346,24.337463
,51.803631,24.290771
,51.749287,24.318237
,51.664243,24.123230
,51.614845,24.076538
,51.597798,24.018860
,51.584157,24.018860
,51.579040,23.994141
,51.585862,23.955688
,51.592683,23.933716
,51.592683,23.900757
,51.592683,23.881531
,51.611436,23.881531
,51.630181,23.914490
,51.643809,23.826599
,51.636996,23.779907
,51.662541,23.790894
,51.662541,23.757935
,51.645512,23.700256
,51.650622,23.675537
,51.638699,23.656311
,51.623366,23.601379
,51.589273,23.628845
,51.582451,23.661804
,51.551741,23.639832
,51.503929,23.678284
,51.503929,23.623352
,51.486840,23.637085
,51.488550,23.653564
,51.471456,23.672791
,51.456066,23.645325
,51.442381,23.678284
,51.413289,23.694763
,51.401304,23.700256
,51.391029,23.675537
,51.370472,23.686523
,51.339618,23.648071
,51.286434,23.648071
,51.286434,23.689270
,51.258959,23.724976
,51.214279,23.741455
,51.167834,23.807373
,51.154063,23.859558
,51.129955,23.870544
,51.126510,23.845825
,51.076527,23.878784
,51.076527,23.906250
,51.045476,23.914490
,51.012678,23.933716
,51.002316,23.911743
,50.945282,23.972168
,50.940094,23.988647
,50.902028,24.043579
,50.889910,24.049072
,50.867396,24.147949
,50.839672,24.112244
,50.832244,24.068298
,50.836205,23.996887
,50.810197,23.961182
,50.782439,23.963928
,50.766818,23.963928
,50.770290,24.013367
,50.716447,24.016113
,50.716447,24.073792
,50.674720,24.062805
,50.674720,24.082031
,50.638179,24.082031
,50.631215,24.098511
,50.617285,24.093018
,50.596382,24.101257
,50.448054,24.038086
,50.434069,24.005127
,50.413085,24.002380
,50.413085,23.936462
,50.404339,23.799133
,50.376340,23.697510
,50.329055,23.681030
,50.318541,23.634338
,50.302765,23.626099
,50.292245,23.601379
,50.267690,23.582153
,49.561333,22.675781
,49.507894,22.642822
,49.479369,22.703247
,49.340073,22.741699
,49.257739,22.741699
,49.229069,22.725220
,49.211142,22.747192
,49.168089,22.703247
,49.168089,22.747192
,49.146549,22.747192
,49.089063,22.890015
,49.053100,22.873535
,49.009911,22.890015
,49.002709,22.851563
,49.006310,22.835083
,49.038708,22.752686
,49.038708,22.670288
,49.085468,22.576904
,49.006310,22.538452
,48.991904,22.483521
,48.908989,22.412109
,48.880117,22.412109
,48.858452,22.362671
,48.786167,22.373657
,48.753605,22.329712
,48.739126,22.351685
,48.684793,22.351685
,48.608629,22.225342
,48.594108,22.164917
,48.412249,22.137451
]
 
location.CommonTasks.SetAreaTypePattern(boundary_Ukraine) #connecting all the coordinates points listed above to create a close curve
 
location2 = root.CurrentScenario.Children.New('eAreaTarget', 'ConflictZone')
location2.AreaTypeData.RemoveAll;
 
conflictzone = [
46.362200,31.025391
,46.384925,31.234131
,46.157251,31.322021
,46.035438,31.629639
,45.821618,32.761230
,45.821618,32.211914
,45.282737,32.211914
,45.112535,32.640381
,45.128029,32.805176
,44.926280,33.288574
,44.762810,33.244629
,44.544128,33.101807
,44.253891,33.453369
,44.167327,33.859863
,44.214559,34.112549
,44.308911,34.376221
,44.606693,34.771729
,44.575419,35.046387
,44.723820,35.397949
,44.840711,35.628662
,44.926280,36.584473
,45.174486,36.518555
,45.421614,36.672363
,45.621613,36.661377
,45.606254,36.013184
,45.490925,35.573730
,45.790287,35.244141
,45.912640,35.167236
,46.414500,35.837402
,46.300843,36.166992
,46.527921,36.540527
,46.452334,36.848145
,46.701374,37.155762
,46.693844,37.408447
,46.821709,37.628174
,46.866766,38.155518
,46.979241,38.331299
,47.218401,38.221436
,47.292918,38.331299
,47.292918,38.199463
,47.411927,38.298340
,47.545491,38.298340
,47.649140,38.452148
,47.641744,38.594971
,47.686108,38.649902
,47.678716,38.759766
,47.796854,38.781738
,47.863188,38.869629
,47.863188,39.067383
,47.818975,39.122314
,47.855822,39.385986
,47.811602,39.737549
,47.958855,39.803467
,48.017639,39.781494
,48.039666,39.869385
,48.069020,39.847412
,48.186271,39.913330
,48.215541,40.012207
,48.310556,39.968262
,48.266725,39.924316
,48.317857,39.836426
,48.347053,39.935303
,48.463667,39.847412
,48.565486,39.858398
,48.580015,39.660645
,48.652596,39.704590
,48.761273,39.737549
,48.826366,39.770508
,48.797446,39.957275
,48.869715,40.078125
,48.913026,40.045166
,48.862492,39.990234
,48.869715,39.825439
,48.977922,39.704590
,49.028338,39.660645
,49.028338,39.748535
,49.042734,39.924316
,49.172105,40.034180
,49.229495,40.111084
,49.243832,40.198975
,49.329767,40.177002
,49.436975,40.034180
,49.508317,40.023193
,49.565316,40.177002
,49.608022,40.122070
,49.586673,39.946289
,49.543949,39.869385
,49.615136,39.616699
,49.714622,39.594727
,49.743009,39.385986
,49.757197,39.243164
,49.877623,39.177246
,49.813905,39.001465
,49.792647,38.924561
,49.849314,38.924561
,49.877623,38.748779
,49.920054,38.693848
,49.997749,38.693848
,49.955386,38.660889
,49.955386,38.496094
,50.004806,38.430176
,49.983632,38.408203
,49.997749,38.342285
,50.068272,38.320313
,50.061224,38.177490
,49.976572,38.199463
,49.936201,38.117065
,49.898843,38.023682,
49.886646,38.034668,
49.83704,38.0896,
49.83704,38.023682,
49.815765,38.001709,
49.769637,38.056641,
49.74478,38.001709,
49.766086,37.96875,
49.712803,37.963257,
49.691473,38.012695,
49.630988,38.040161,
49.602498,37.946777,
49.563298,37.941284,
49.563298,37.919312,
49.538336,37.875366,
49.527634,37.935791,
49.502653,37.842407,
49.441934,37.842407,
49.42406,37.891846,
49.305935,37.886353,
49.284427,37.957764,
49.249141,37.908325,
49.227608,37.8479,
49.231908,37.87262,
49.228214,37.857513,
49.201286,37.845154,
49.229112,37.615814,
49.225522,37.592468,
49.229112,37.570496,
49.208468,37.549896,
49.195,37.508698,
49.182427,37.499084,
49.177935,37.515564,
49.160865,37.559509,
49.135698,37.569122,
49.141092,37.555389,
49.141092,37.537537,
49.123109,37.580109,
49.098849,37.490845,
49.065548,37.507324,
49.056544,37.481232,
49.04934,37.452393,
49.057445,37.420807,
49.05024,37.411194,
49.047538,37.386475,
49.021464,37.396088,
49.024168,37.368622,
48.994423,37.372742,
48.985406,37.365875,
48.995325,37.357635,
48.998931,37.342529,
48.991718,37.337036,
48.989915,37.310944,
48.976387,37.324677,
48.97278,37.299957,
48.965563,37.299957,
48.958345,37.31369,
48.945712,37.31781,
48.943907,37.308197,
48.93127,37.338409,
48.919533,37.33017,
48.914114,37.30545,
48.921338,37.298584,
48.919533,37.275238,
48.908696,37.268372,
48.905986,37.246399,
48.907793,37.224426,
48.885294,37.214813,
48.878065,37.191467,
48.853659,37.19696,
48.816574,37.19696,
48.816574,37.164001,
48.827431,37.147522,
48.827431,37.139282,
48.846425,37.147522,
48.838286,37.132416,
48.842808,37.103577,
48.817479,37.084351,
48.814765,37.073364,
48.809335,37.070618,
48.81386,37.030792,
48.803,37.025299,
48.80119,37.012939,
48.786706,36.99646,
48.774029,37.022552,
48.763161,37.029419,
48.761349,37.043152,
48.743229,37.036285,
48.754285,37.020493,
48.762891,37.009506,
48.762891,36.999893,
48.787794,36.975174,
48.794584,36.944962,
48.789605,36.931229,
48.791868,36.920929,
48.797752,36.919556,
48.799562,36.855698,
48.779192,36.841278,
48.779192,36.835098,
48.771042,36.839218,
48.770136,36.817245,
48.777381,36.819992,
48.779192,36.78772,
48.784625,36.78978,
48.786436,36.784286,
48.801825,36.78978,
48.794584,36.764374,
48.805445,36.719742,
48.783267,36.704636,
48.777834,36.688843,
48.768325,36.689529,
48.764168,36.710815,
48.743331,36.725922,
48.705258,36.732788,
48.691654,36.727295,
48.688025,36.709442,
48.67986,36.720428,
48.672601,36.716309,
48.666249,36.723175,
48.659896,36.734161,
48.65445,36.723175,
48.646279,36.724548,
48.641739,36.736908,
48.624485,36.735535,
48.596512,36.742401,
48.597421,36.776047,
48.561966,36.78978,
48.57015,36.822739,
48.565149,36.824112,
48.568787,36.856384,
48.546049,36.87149,
48.550143,36.882477,
48.54241,36.884537,
48.538771,36.899643,
48.518295,36.907883,
48.51602,36.849518,
48.485386,36.855011,
48.480832,36.830292,
48.446207,36.834412,
48.443408,36.84557,
48.424034,36.850719,
48.416852,36.850891,
48.419702,36.841621,
48.414002,36.823769,
48.407132,36.837845,
48.405307,36.818619,
48.370631,36.826172,
48.368805,36.811752,
48.347931,36.818619,
48.343821,36.804199,
48.312759,36.811752,
48.315043,36.872864,
48.30499,36.870804,
48.305447,36.910629,
48.196629,36.933289,
48.181972,36.867371,
48.071906,36.897583,
48.055376,36.88385,
48.053539,36.867371,
48.029652,36.864624,
48.037381,36.842651,
48.034395,36.833382,
48.039448,36.817589,
48.039448,36.813469,
48.044272,36.808319,
48.052309,36.805229,
48.046798,36.79287,
48.050702,36.787376,
48.04565,36.780853,
48.056014,36.763687,
48.050044,36.759567,
48.048896,36.749268,
48.051651,36.740341,
48.060836,36.747208,
48.066576,36.739998,
48.069101,36.728325,
48.077594,36.725235,
48.08425,36.716995,
48.078742,36.713905,
48.080578,36.705666,
48.081266,36.701202,
48.08402,36.697083,
48.084938,36.685753,
48.090446,36.678543,
48.090675,36.668243,
48.086086,36.664124,
48.089528,36.661377,
48.09297,36.65554,
48.098247,36.65863,
48.099165,36.653824,
48.095035,36.650734,
48.093429,36.635284,
48.091134,36.641121,
48.093309,36.647472,
48.088031,36.652107,
48.088031,36.648331,
48.089064,36.646442,
48.087687,36.644554,
48.089064,36.638718,
48.086654,36.636658,
48.088949,36.628933,
48.086654,36.627903,
48.084818,36.633224,
48.082064,36.630821,
48.085048,36.6255,
48.08172,36.623268,
48.089064,36.610394,
48.090211,36.60284,
48.088949,36.600609,
48.085851,36.605072,
48.080717,36.594772,
48.080717,36.586533,
48.076127,36.587219,
48.077504,36.581039,
48.072913,36.586533,
48.061894,36.587219,
48.061469,36.577606,
48.057336,36.582413,
48.049069,36.588593,
48.039423,36.573486,
48.020125,36.594086,
48.012772,36.563873,
47.998981,36.590652,
47.999441,36.578979,
47.998062,36.57692,
47.956667,36.585846,
47.959888,36.628418,
47.918462,36.640778,
47.91616,36.618805,
47.920304,36.591339,
47.909252,36.592026,
47.905568,36.543274,
47.876082,36.549454,
47.878386,36.575546,
47.846119,36.585159,
47.836199,36.519928,
47.827343,36.523361,
47.820885,36.454697,
47.82596,36.427231,
47.826421,36.412125,
47.828727,36.397018,
47.828266,36.377792,
47.836568,36.375732,
47.840258,36.322174,
47.819962,36.332474,
47.814887,36.302261,
47.816733,36.298141,
47.817194,36.283035,
47.832417,36.264496,
47.831033,36.203384,
47.837952,36.189651,
47.859623,36.199265,
47.855935,36.177292,
47.848558,36.181412,
47.84118,36.100388,
47.850402,36.098328,
47.848558,36.074295,
47.86331,36.067429,
47.868842,36.057129,
47.879887,36.053696,
47.879887,36.080475,
47.859147,36.088028,
47.863757,36.117554,
47.869749,36.11618,
47.890485,36.1306,
47.894171,36.119614,
47.898777,36.13266,
47.921344,36.105194,
47.927789,36.120987,
47.938837,36.107941,
47.927329,36.082535,
47.959086,36.074295,
47.955405,36.050949,
47.961386,36.043396,
47.970127,36.072235,
48.000019,36.063995,
48.000019,36.043396,
48.016107,36.03447,
48.022082,36.065369,
48.056995,36.052322,
48.042936,35.978851,
48.05947,35.982971,
48.056715,35.981598,
48.055797,35.971985,
48.077835,35.981598,
48.082426,35.982971,
48.08518,35.977478,
48.088851,35.960999,
48.065899,35.823669,
48.095276,35.809937,
48.092523,35.739899,
48.13656,35.704193,
48.07049,35.524292,
48.092523,35.520172,
48.091605,35.48996,
48.099865,35.443268,
48.096194,35.414429,
48.108124,35.418549,
48.117298,35.344391,
48.142062,35.288086,
48.131057,35.259247,
48.137477,35.223541,
48.138394,35.200195,
48.129586,35.109558,
48.11124,35.087585,
48.120414,35.062866,
48.085543,35.040894,
48.080035,34.999695,
48.083707,34.988708,
48.081871,34.917297,
48.113075,34.914551,
48.122248,34.895325,
48.122248,34.870605,
48.056161,34.876099,
48.045138,34.848633,
48.002861,34.8349,
48.010216,34.859619,
47.975271,34.865112,
47.978951,34.900818,
47.92373,34.93103,
47.921888,34.909058,
47.927413,34.881592,
47.929254,34.851379,
47.901625,34.856873,
47.910836,34.815674,
47.853699,34.807434,
47.883197,34.854126,
47.857387,34.870605,
47.840788,34.898071,
47.828089,34.902878,
47.818632,34.879189,
47.758454,34.892578,
47.771386,34.958496,
47.736279,34.972229,
47.732582,34.95575,
47.723339,34.95575,
47.708547,34.963989,
47.709471,34.933777,
47.677099,34.937897,
47.668771,34.899445,
47.627113,34.917297,
47.638225,34.933777,
47.606734,34.94751,
47.585072,34.936523,
47.540564,34.958496,
47.51644,34.909058,
47.52572,34.793701,
47.533142,34.755249,
47.555404,34.612427,
47.54984,34.546509,
47.531287,34.486084,
47.510871,34.30481,
47.484876,34.233398,
47.473732,34.156494,
47.477849,34.142761,
47.450152,33.947754,
47.505877,33.925781,
47.476165,33.662109,
47.49845,33.640137,
47.49845,33.596191,
47.561543,33.607178,
47.580085,33.568726,
47.5875,33.486328,
47.542994,33.486328,
47.52815,33.338013,
47.461302,33.348999,
47.468734,33.31604,
47.509722,33.272095,
47.554256,33.296814,
47.520859,33.222656,
47.580216,33.236389,
47.565383,33.1073,
47.531994,33.096313,
47.53756,33.145752,
47.511578,33.156738,
47.504152,33.123779,
47.405662,33.121033,
47.411242,33.071594,
47.474439,33.071594,
47.470724,33.057861,
47.436985,33.052368,
47.42583,33.027649,
47.384909,33.033142,
47.384909,33.110046,
47.327193,33.140259,
47.302971,33.096313,
47.237703,33.186951,
47.226506,33.134766,
47.198503,33.143005,
47.213439,33.1073,
47.207839,33.063354,
47.181694,33.041382,
47.163011,33.033142,
47.179826,32.997437,
47.181694,32.975464,
47.142453,32.920532,
47.088215,32.904053,
47.035795,33.033142,
47.073243,33.046875,
47.048905,33.071594,
47.051413,33.077087,
47.110665,33.077087,
47.136844,33.101807,
47.095699,33.162231,
46.968322,33.041382,
46.996758,32.947998,
46.976135,32.923279,
46.940495,32.947998,
46.940495,32.972717,
46.91985,32.975464,
46.917973,32.926025,
46.899198,32.928772,
46.891686,32.838135,
46.867265,32.849121,
46.867265,32.904053,
46.852231,32.923279,
46.837193,32.816162,
46.829672,32.783203,
46.807104,32.794189,
46.818389,32.772217,
46.814628,32.703552,
46.852231,32.695313,
46.840953,32.629395,
46.857869,32.582703,
46.863507,32.555237,
46.871023,32.54425,
46.869144,32.530518,
46.839073,32.536011,
46.818469,32.541504,
46.810946,32.475586,
46.833513,32.470093,
46.824111,32.376709,
46.795897,32.384949,
46.790252,32.35199,
46.846672,32.2229,
46.818469,32.269592,
46.801541,32.2229,
46.763902,32.2229,
46.756371,32.156982,
46.745073,32.170715,
46.733772,32.124023,
46.741306,32.102051,
46.741306,32.052612,
46.724353,32.063599,
46.686661,32.099304,
46.665918,32.011414,
46.641395,31.992188,
46.650828,31.929016]
 
location2.CommonTasks.SetAreaTypePattern(conflictzone);
 
#Adding the Target points
 
#load ('Ukfrontline.mat');
#
#for i=1:length(Ukfrontline)
#    s1 = num2str(i);
#    punto(i)=scenario.Children.New('eTarget',s1);
#    punto(i).Position.AssignGeodetic(Ukfrontline(i,1),Ukfrontline(i,2),0);
#end
 
#%%

#Adding the Spacecraft
N = 8

#satellite 1
 
#selecting the orbital propagator (HPOP is very precise conssidering several disturbances)

satellite1 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite

satellite1.SetPropagatorType('ePropagatorHPOP');
set(satellite1.Propagator, 'Step', 5);
keplerian = satellite1.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
#specifing orbital parameters
 
keplerian.SizeShape.PerigeeAltitude = 250;     #km
keplerian.SizeShape.ApogeeAltitude = 250;      #km
 
keplerian.Orientation.Inclination = 53.427;    #deg
keplerian.Orientation.ArgOfPerigee = 0;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                  #deg
 
satellite1.Propagator.InitialState.Representation.Assign(keplerian);
 
#standard to allow the propagation with HPOP
 
forceModel = satellite1.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Programmes\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite1.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite1.Propagator.Propagate();
 
#satellite 2
 
satellite2 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite2.SetPropagatorType('ePropagatorHPOP');
set(satellite2.Propagator, 'Step', 5);
keplerian = satellite2.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 45;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite2.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite2.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite2.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite2.Propagator.Propagate();
 
#satellite 3
 
satellite3 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite3.SetPropagatorType('ePropagatorHPOP');
set(satellite3.Propagator, 'Step', 5);
keplerian = satellite3.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 90;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite3.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite3.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite3.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite3.Propagator.Propagate();
 
#satellite 4
 
satellite4 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite4.SetPropagatorType('ePropagatorHPOP');
set(satellite4.Propagator, 'Step', 5);
keplerian = satellite4.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 135;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite4.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite4.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite4.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite4.Propagator.Propagate();
 
#satellite 5
 
satellite5 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite5.SetPropagatorType('ePropagatorHPOP');
set(satellite5.Propagator, 'Step', 5);
keplerian = satellite5.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 180;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite5.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite5.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite5.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite5.Propagator.Propagate();
 
#satellite 6
 
satellite6 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite6.SetPropagatorType('ePropagatorHPOP');
set(satellite6.Propagator, 'Step', 5);
keplerian = satellite6.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 225;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite6.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite6.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite6.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite6.Propagator.Propagate();
 
#satellite 7
 
satellite7 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite7.SetPropagatorType('ePropagatorHPOP');
set(satellite7.Propagator, 'Step', 5);
keplerian = satellite7.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 270;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite7.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite7.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite7.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite7.Propagator.Propagate();
 
#satellite 8 
 
satellite8 = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
 
satellite8.SetPropagatorType('ePropagatorHPOP');
set(satellite8.Propagator, 'Step', 5);
keplerian = satellite8.Propagator.InitialState.Representation.ConvertTo('eOrbitStateClassical'); #Use the Classical Element interface
keplerian.SizeShapeType = 'eSizeShapeAltitude';  #Changes from Ecc/Inc to Perigee/Apogee Altitude
keplerian.LocationType = 'eLocationTrueAnomaly'; #Makes sure True Anomaly is being used
 
keplerian.SizeShape.PerigeeAltitude = 250;      #km
keplerian.SizeShape.ApogeeAltitude = 250;       #km
 
keplerian.Orientation.Inclination = 53.427;         #deg
keplerian.Orientation.ArgOfPerigee = 315;        #deg
keplerian.Orientation.AscNode.Value = 0;       #deg
 
keplerian.Location.Value = 0;                 #deg
 
satellite8.Propagator.InitialState.Representation.Assign(keplerian);
 
forceModel = satellite8.Propagator.ForceModel;
forceModel.CentralBodyGravity.File = 'C:\Program Files\AGI\STK 11\STKData\CentralBodies\Earth\WGS84_EGM96.grv';
forceModel.CentralBodyGravity.MaxDegree = 40;
forceModel.CentralBodyGravity.MaxOrder = 40;
forceModel.Drag.Use=1;
forceModel.Drag.DragModel.Cd=0;
forceModel.Drag.DragModel.AreaMassRatio=0;
forceModel.SolarRadiationPressure.Use=0;
integrator = satellite8.Propagator.Integrator;
integrator.DoNotPropagateBelowAlt=-1e6;
integrator.IntegrationModel=3;
integrator.StepSizeControl.Method=1;
integrator.StepSizeControl.ErrorTolerance=1e-13;
integrator.StepSizeControl.MinStepSize=0.1;
integrator.StepSizeControl.MaxStepSize=30;
integrator.Interpolation.Method=1;
integrator.Interpolation.Order=7;
satellite8.Propagator.Propagate();
 
 
 
#%% NORAD

France=pd.read_csv(r"C:\Users\DECLINE\Desktop\logiciels\python\stk\sat_France.csv")
# IAgSatellite satellite: Satellite object
for i in range(len(France)):
    satellite = root.CurrentScenario.Children.New(18, 'MySatellite') # eSatellite
    satellite.Graphics.UseInstNameLabel = False
    satellite.Graphics.LabelName = str(France.iloc[i, 0])
    satellite.SetPropagatorType(4) # ePropagatorSGP4
    propagator = satellite.Propagator
    propagator.UseScenarioAnalysisTime
    propagator.CommonTasks.AddSegsFromOnlineSource(str(France.iloc[i, 1])) # International Space Station
    propagator.AutoUpdateEnabled = True
    propagator.Propagate()


#%%

#Attaching the optical payload and the antenna on every sc
 
sensor1 = satellite1.Children.New('eSensor', 'camera1'); #optical payload
sensor1.CommonTasks.SetPatternRectangular(2.22,2.22); #op proprieties ('FOVx', 'FOVy')
sensor1.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200); #setting a Pushbroom design #(azimuth, elevation, cone angle, scan mode, spin rate, initial offset
#angle, start angle, stop angle)
sensor9 = satellite1.Children.New('eSensor', 'antenna1');
sensor9.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor2 = satellite2.Children.New('eSensor', 'camera2');
sensor2.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor2.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor10 = satellite2.Children.New('eSensor', 'antenna2');
sensor10.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor3 = satellite3.Children.New('eSensor', 'camera3');
sensor3.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor3.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor11 = satellite3.Children.New('eSensor', 'antenna3');
sensor11.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor4 = satellite4.Children.New('eSensor', 'camera4');
sensor4.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor4.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor12 = satellite4.Children.New('eSensor', 'antenna4');
sensor12.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor5 = satellite5.Children.New('eSensor', 'camera5');
sensor5.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor5.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor13 = satellite5.Children.New('eSensor', 'antenna5');
sensor13.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor6 = satellite6.Children.New('eSensor', 'camera6');
sensor6.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor6.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor14 = satellite6.Children.New('eSensor', 'antenna6');
sensor14.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor7 = satellite7.Children.New('eSensor', 'camera7');
sensor7.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor7.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor15 = satellite7.Children.New('eSensor', 'antenna7');
sensor15.CommonTasks.SetPatternSimpleConic(3, 0.17453293);
 
sensor8 = satellite8.Children.New('eSensor', 'camera8');
sensor8.CommonTasks.SetPatternRectangular(2.22,2.22);
sensor8.CommonTasks.SetPointingSpinning(0, 1.27222e-14, 90, 'eSnUnidirectional', 0.01, 0, 160, 200);
sensor16 = satellite8.Children.New('eSensor', 'antenna8');
sensor16.CommonTasks.SetPatternSimpleConic(3, 0.17453293);


# # IAgStkObjectRoot root: STK Object Model Root
# # IAgSatellite satellite: Satellite object
# constellation = root.CurrentScenario.Children.New(AgESTKObjectType.eConstellation, 'MyConstellation')
# constellation.Objects.AddObject(satellite)
# constellation.Objects.Add('*/Facility/MyFacility')

# IAgScenario scenario: Scenario object
#Create new Coverage Defintion and set the Bounds to an area target
coverage = scenario.Children.New(7, 'MyCoverage')
coverage.Grid.BoundsType = 0 # eBoundsCustomRegions
covGrid = coverage.Grid
bounds = covGrid.Bounds
bounds.AreaTargets.Add('AreaTarget/conflictzone')
#Define the Grid Resolution
Res = covGrid.Resolution
Res.LatLon = .1   #deg
#Set the satellite as the Asset
for i in range(N):
    coverage.AssetList.Add('Satellite/satellite'+str(i+1))

# Turn off Show Grid Points
coverage.Graphics.Static.IsPointsVisible = False
advanced = coverage.Advanced
advanced.AutoRecompute = False # Sinon c'est très long
advanced.DataRetention = 0 # eAllData
advanced.SaveMode = 2 # eSaveAccesses

# Figure of Merit
fom = coverage.Children.New(AgESTKObjectType.eFigureOfMerit, 'RevisitTime')
fom.SetDefinitionType(AgEFmDefinitionType.eFmRevisitTime)
fom.Definition.SetComputeType(AgEFmCompute.eMaximum)


